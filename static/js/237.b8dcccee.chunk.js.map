{"version":3,"file":"static/js/237.b8dcccee.chunk.js","mappings":"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","sources":["components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.js","pages/StatisticsPage/StatisticsPage.styled.jsx","components/StatisticsComponents/StatisticsChart/StatisticsChart.styles.jsx","components/StatisticsComponents/StatisticsChart/StatisticsChartCustomComponents.jsx","components/StatisticsComponents/StatisticsChart/StatisticsChart.jsx","components/StatisticsComponents/StatisticsDatePicker/StatisticsDatePicker.jsx","components/StatisticsComponents/StatisticsPaginator/StatisticsPaginator.styled.jsx","components/StatisticsComponents/StatisticsPaginator/StatisticsPaginator.jsx","components/StatisticsComponents/StatisticsInfoList/StatisticsInfo.styled.jsx","components/StatisticsComponents/StatisticsInfoList/StatisticsInfo.jsx","pages/StatisticsPage/StatisticsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'theme';\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  border-radius: 8px;\n  margin-bottom: 14px;\n  border: none;\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    align-items: center;\n  }\n  @media screen and (max-width: ${theme.breakpoints.mobileMax}) {\n    width: 100%;\n  }\n`;\nexport const PeriodPaginatorButton = styled.p`\n  display: flex;\n  width: 140px;\n  height: 30px;\n  gap: 4px;\n  align-items: center;\n  justify-content: center;\n  padding: 6px 1px;\n  margin-right: 8px;\n  border: none;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.primary};\n  border-radius: 8px;\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.s};\n  line-height: ${theme.lineHeights.body};\n  &:hover {\n    background-color: rgb(43, 120, 239);\n  }\n  &:active {\n    filter: blur(0.1rem);\n  }\n  transition: all ease-in-out 250ms;\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    display: flex;\n    gap: 8px;\n    width: 170px;\n    height: 34px;\n    padding: 8px 1px;\n    margin-right: 8px;\n    margin-bottom: 0;\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: none;\n`;\n\nexport const Button1 = styled.button`\n  height: 30px;\n  width: 38px;\n  background-color: ${theme.colors.third_background_switch};\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.second_text_switch};\n  border: ${theme.borders.normal};\n  border-color: ${theme.colors.calendar_border_color_switch};\n  border-radius: ${theme.radii.small};\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  cursor: pointer;\n  &:hover {\n    background-color: ${theme.colors.background_switch};\n    color: ${theme.colors.third_text_switch};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    height: 34px;\n  }\n  transition: all ease-in-out 250ms;\n`;\n\nexport const Button2 = styled.button`\n  height: 30px;\n  width: 38px;\n  background-color: ${theme.colors.third_background_switch};\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.second_text_switch};\n  border: ${theme.borders.normal};\n  border-color: ${theme.colors.calendar_border_color_switch};\n  border-radius: ${theme.radii.small};\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n  cursor: pointer;\n  &:hover {\n    background-color: ${theme.colors.background_switch};\n    color: ${theme.colors.primary_text_switch};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    height: 34px;\n  }\n  transition: all ease-in-out 250ms;\n`;\n","import styled from 'styled-components';\n\nexport const StatisticsPageContainer = styled.section`\n  background-color: ${p => p.theme.colors.third_background_switch};\n  border-radius: 16px;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (max-width: ${p => p.theme.breakpoints.mobile}) {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n\n    max-width: 335px;\n    border-radius: 16px;\n    padding-top: 28px;\n    padding-bottom: 70px;\n    padding-left: 1px;\n    padding-right: 1px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 768px) {\n    width: 335px;\n    border-radius: 16px;\n    padding-top: 28px;\n    padding-bottom: 70px;\n    padding-left: 14px;\n    padding-right: 14px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 704px;\n    padding-top: 100px;\n    padding-bottom: 100px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 1087px;\n    padding-top: 142px;\n    padding-bottom: 104px;\n    padding-left: 113px;\n    padding-right: 114px;\n  }\n`;\n\nexport const HeadContainer = styled.section`\n  padding-left: 15px;\n  padding-right: 15px;\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 375px) {\n    max-width: 307px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 307px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    display: flex;\n    width: 640px;\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1440px) {\n    display: flex;\n    width: 860px;\n    align-items: center;\n  }\n`;\n\nexport const ChartContainer = styled.section`\n  margin-top: auto;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: ${p => p.theme.colors.third_background_switch};\n  border-radius: 20px;\n  border: 0.8px solid;\n  border-color: ${p => p.theme.colors.statistics_border_color_switch};\n  @media screen and (max-width: 375px) {\n    display: block;\n    max-width: 260px;\n  }\n\n  @media screen and (min-width: 376px) and (max-width: 767px) {\n    width: 307px;\n    height: 413px;\n    padding-top: 40px;\n    padding-bottom: 40px;\n    padding-left: 14px;\n    padding-right: 14px;\n  }\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    width: 640px;\n    height: 424px;\n    padding-top: 32px;\n    padding-bottom: 32px;\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    width: 860px;\n    height: 440px;\n    padding: 40px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const CustomText = styled.text`\n  fill: ${p => p.theme.colors.third_text_switch};\n  @media screen and (max-width: 375px) {\n    font-size: 12px;\n    font-weight: 500;\n  }\n`;\nexport const TooltipStyled = styled.div`\n  width: 120px;\n  height: 100px;\n  padding-top: 15px;\n  padding-left: 5px;\n  padding-right: 5px;\n\n  background-color: ${p => p.theme.colors.statistics_tooltip_background};\n  border-radius: 10px;\n`;\nexport const TooltipTitle = styled.p`\n  margin-bottom: 8px;\n  color: ${p => p.theme.colors.statistics_tooltip_text};\n  font-family: ${p => p.theme.fonts.text};\n  font-size: 17px;\n  font-weight: 600;\n  text-align: center;\n`;\nexport const TooltipText = styled.p`\n  margin-bottom: 4px;\n  color: ${p => p.theme.colors.statistics_tooltip_text};\n  font-family: ${p => p.theme.fonts.text};\n  font-size: 15px;\n  font-weight: 500;\n  @media screen and (max-width: 375px) {\n    font-size: 12px;\n    font-weight: 500;\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  CustomText,\n  TooltipStyled,\n  TooltipTitle,\n  TooltipText,\n} from './StatisticsChart.styles';\n\nexport const CustomTooltip = ({ active, payload, label }) => {\n  const { t } = useTranslation();\n  if (active && payload && payload.length) {\n    return (\n      <TooltipStyled>\n        <TooltipTitle>{label}</TooltipTitle>\n        <TooltipText>\n          <span>{t('By Day')}: </span> {payload[0].value + '%'}\n        </TooltipText>\n        <TooltipText>\n          <span>{t('By Month')}: </span>\n          {payload[1].value + '%'}\n        </TooltipText>\n      </TooltipStyled>\n    );\n  }\n\n  return null;\n};\n\nexport const CustomXAxisTick = props => {\n  const { x, y, payload } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <CustomText\n        x={0}\n        y={-3}\n        dy={16}\n        textAnchor=\"middle\"\n        fontSize={14}\n        fontFamily=\"Inter\"\n      >\n        {payload.value}\n      </CustomText>\n    </g>\n  );\n};\n\nexport const CustomYAxisTick = props => {\n  const { x, y, payload } = props;\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <CustomText\n        x={0}\n        y={0}\n        dy={4}\n        textAnchor=\"middle\"\n        fontSize={14}\n        fontFamily=\"Inter\"\n      >\n        {payload.value}\n      </CustomText>\n    </g>\n  );\n};\n\nexport const BarCustomLabel = props => {\n  const { x, y, width, value } = props;\n  const labelY = y - 5;\n\n  return (\n    <g>\n      <CustomText\n        x={x + 2 + width / 2}\n        y={labelY}\n        textAnchor=\"middle\"\n        dominantBaseline=\"middle\"\n        fontSize={16}\n        fontFamily=\"Inter\"\n        fontWeight={500}\n      >\n        {`${value}%`}\n      </CustomText>\n    </g>\n  );\n};\n\nexport const TitleCustomLabel = props => {\n  const { value } = props;\n  const { x, y } = props.viewBox;\n\n  return (\n    <CustomText\n      x={x}\n      y={y - 20}\n      dy={-10}\n      fontSize={16}\n      fontFamily=\"Inter\"\n      fontWeight=\"700\"\n    >\n      {value}\n    </CustomText>\n  );\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\n\nimport { selectTasksStatistics } from 'redux/tasks/selectors';\nimport { getTasksStatistics } from 'redux/tasks/operations';\n\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  LabelList,\n  ResponsiveContainer,\n  Label,\n} from 'recharts';\n\nimport {\n  CustomTooltip,\n  CustomXAxisTick,\n  CustomYAxisTick,\n  BarCustomLabel,\n  TitleCustomLabel,\n} from './StatisticsChartCustomComponents';\nimport { useTranslation } from 'react-i18next';\n\nexport const StatisticsChart = ({ selectedDay }) => {\n  const dispatch = useDispatch();\n\n  const statistics = useSelector(selectTasksStatistics);\n  const { t } = useTranslation();\n  const { statisticsByDay, statisticsByMonth } = statistics;\n  useEffect(() => {\n    if (selectedDay !== '') {\n      dispatch(getTasksStatistics(selectedDay));\n    }\n  }, [dispatch, selectedDay]);\n\n  const data = [\n    {\n      name: t('To Do'),\n      by_Month: statisticsByMonth?.todo ?? 0 + '%',\n      by_Day: statisticsByDay?.todo ?? 0 + '%',\n    },\n    {\n      name: t('In Action'),\n      by_Month: statisticsByMonth?.inProgress ?? 0 + '%',\n      by_Day: statisticsByDay?.inProgress ?? 0 + '%',\n    },\n    {\n      name: t('Done'),\n      by_Month: statisticsByMonth?.done ?? 0 + '%',\n      by_Day: statisticsByDay?.done ?? 0 + '%',\n    },\n  ];\n  return (\n    <ResponsiveContainer minWidth={250} minHeight={300}>\n      <BarChart\n        data={data}\n        margin={{\n          top: 45,\n          right: 10,\n          left: 10,\n          bottom: 10,\n        }}\n        barCategoryGap={75}\n        barGap={10}\n        barSize={27}\n      >\n        <defs>\n          <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(255, 210, 221)\" stopOpacity={0} />\n            <stop\n              offset=\"100%\"\n              stopColor=\"rgb(255, 210, 221)\"\n              stopOpacity={1}\n            />\n          </linearGradient>\n        </defs>\n        <defs>\n          <linearGradient id=\"colorUv1\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n            <stop offset=\"0%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={0} />\n            <stop offset=\"100%\" stopColor=\"rgb(62, 133, 243)\" stopOpacity={1} />\n          </linearGradient>\n        </defs>\n        <CartesianGrid vertical={false} stroke=\"#E3F3FF\" strokeWidth={1} />\n        <XAxis\n          dataKey=\"name\"\n          tickLine={false}\n          tick={<CustomXAxisTick />}\n          tickMargin={16}\n        />\n        <YAxis\n          type=\"number\"\n          position=\"left\"\n          axisLine={false}\n          ticks={[0, 20, 40, 60, 80, 100]}\n          tickLine={false}\n          tickCount={6}\n          tickMargin={28}\n          tick={<CustomYAxisTick />}\n        >\n          <Label\n            value={t('Tasks')}\n            position=\"insideTop\"\n            angle={0}\n            offset={-43}\n            content={<TitleCustomLabel />}\n          />\n        </YAxis>\n        <Tooltip cursor={false} content={<CustomTooltip />} />\n        <Bar\n          dataKey=\"by_Day\"\n          maxBarSize={27}\n          barSize={27}\n          minPointSize={22}\n          radius={[0, 0, 10, 10]}\n          fill=\"url(#colorUv)\"\n        >\n          <LabelList\n            offset={10}\n            dataKey=\"by_Day\"\n            position=\"top\"\n            content={<BarCustomLabel />}\n          />\n        </Bar>\n        <Bar\n          dataKey=\"by_Month\"\n          barSize={27}\n          fill=\"url(#colorUv1)\"\n          radius={[0, 0, 10, 10]}\n        >\n          <LabelList\n            dataKey=\"by_Month\"\n            position=\"top\"\n            content={<BarCustomLabel />}\n          />\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import DatePicker from 'sassy-datepicker';\nimport './statisticsDatePicker.css';\n\nexport const StatisticsDatePicker = ({ onChange, date, open }) => {\n  return (\n    <>\n      <div className=\"statistics\">\n        <DatePicker weekStartsFrom=\"Monday\" onChange={onChange} value={date} />\n      </div>\n    </>\n  );\n};\n","import {\n  PeriodPaginatorButton,\n  Button1,\n  Button2,\n} from 'components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled';\nimport styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const StatisticsDateWrapper = styled.div`\n  position: relative;\n  display: flex;\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (max-width: ${theme.breakpoints.mobileMax}) {\n    margin-bottom: 20px;\n    justify-content: space-between;\n  }\n`;\n\nexport const StatisticsPaginatorDateButton = styled(PeriodPaginatorButton)``;\n\nexport const StatisticsChangeButtonsWrapper = styled.div``;\n\nexport const StatisticsButton1 = styled(Button1)`\n  @media screen and (max-width: ${theme.breakpoints.mobile}) {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\nexport const StatisticsButton2 = styled(Button2)`\n  @media screen and (max-width: ${theme.breakpoints.mobile}) {\n    width: 25px;\n    height: 25px;\n  }\n`;\n\n\n","import { useState, useEffect, useRef } from 'react';\nimport { format, addDays, subDays } from 'date-fns';\nimport { StatisticsDatePicker } from '../StatisticsDatePicker/StatisticsDatePicker';\n\nimport {\n  StatisticsPaginatorDateButton,\n  StatisticsDateWrapper,\n  StatisticsButton1,\n  StatisticsButton2,\n  StatisticsChangeButtonsWrapper,\n} from './StatisticsPaginator.styled';\n\nexport const StatisticsPeriodPaginator = ({ onChange }) => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [isOpen, setIsOpen] = useState(false);\n\n\n\n  const onDatePickerChange = newDate => {\n    setIsOpen(!isOpen);\n    setCurrentDate(newDate);\n  };\n\n  const formatDateForFront = date => format(date, 'dd MMMM yyyy');\n\n  const formatDataForBack = date => format(date, 'yyyy-MM-dd');\n\n  // Hook для закриття DatePicker\n  const outsideReference = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (\n        outsideReference.current &&\n        !outsideReference.current.contains(event.target)\n      ) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setIsOpen]);\n\n  useEffect(() => {\n    const formattedDate = formatDataForBack(currentDate);\n\n    onChange(formattedDate);\n  }, [currentDate, onChange]);\n\n  const handlePreviousDay = () => {\n    const previousDay = subDays(currentDate, 1);\n    setCurrentDate(previousDay);\n  };\n\n  const handleNextDay = () => {\n    const nextDay = addDays(currentDate, 1);\n    setCurrentDate(nextDay);\n  };\n\n  return (\n    <div>\n      <StatisticsDateWrapper ref={outsideReference}>\n        <StatisticsPaginatorDateButton\n          type=\"button\"\n          aria-label=\"DatePicker\"\n          onClick={() => {\n            setIsOpen(!isOpen);\n          }}\n        >\n          {formatDateForFront(currentDate)}\n       \n        </StatisticsPaginatorDateButton>\n\n        {isOpen && (\n          <StatisticsDatePicker\n            open={isOpen}\n            onChange={onDatePickerChange}\n            value={currentDate}\n          />\n        )}\n\n        <StatisticsChangeButtonsWrapper>\n          <StatisticsButton1 onClick={handlePreviousDay}>\n            &lt;\n          </StatisticsButton1>\n          <StatisticsButton2 onClick={handleNextDay}>&gt;</StatisticsButton2>\n        </StatisticsChangeButtonsWrapper>\n      </StatisticsDateWrapper>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { theme } from 'theme';\n\nexport const InfoListContainer = styled.ul`\n  display: flex;\n  gap: 30px;\n  margin-left: 16px;\n  @media screen and (min-width: 768px) {\n    margin-left: auto;\n  }\n`;\n\nexport const InfoListItem = styled.li`\n  position: relative;\n  display: flex;\n`;\n\nexport const InfoTextFirst = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  font-family: ${theme.fonts.text};\n  color: ${theme.colors.third_text_switch};\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n  }\n  &:before {\n    content: '';\n    position: absolute;\n    margin-left: -15px;\n    margin-top: 4px;\n    width: 8px;\n    height: 8px;\n    border-radius: 50%;\n    background-color: ${theme.colors.lightRed};\n  }\n`;\n\nexport const InfoTextSecond = styled(InfoTextFirst)`\n  &:before {\n    background-color: ${theme.colors.primary};\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport {\n  InfoListContainer,\n  InfoListItem,\n  InfoTextFirst,\n  InfoTextSecond,\n} from './StatisticsInfo.styled';\n\nexport const StatisticsInfo = () => {\nconst { t } = useTranslation();\n\n  return (\n    <InfoListContainer>\n      <InfoListItem>\n        <InfoTextFirst>{t('By Day')}</InfoTextFirst>\n      </InfoListItem>\n      <InfoListItem>\n        <InfoTextSecond>{t('By Month')}</InfoTextSecond>\n      </InfoListItem>\n    </InfoListContainer>\n  );\n};\n","import {\n  StatisticsPageContainer,\n  HeadContainer,\n  ChartContainer,\n} from './StatisticsPage.styled';\nimport { StatisticsChart } from 'components/StatisticsComponents/StatisticsChart/StatisticsChart';\nimport { StatisticsPeriodPaginator } from 'components/StatisticsComponents/StatisticsPaginator/StatisticsPaginator';\nimport { useState } from 'react';\nimport { StatisticsInfo } from 'components/StatisticsComponents/StatisticsInfoList/StatisticsInfo';\n\nconst StatisticsPage = () => {\n  const [selectedDay, setSelectedDay] = useState('');\n\n  const takeCurrentDate = date => {\n    if (date) {\n      setSelectedDay(date);\n    }\n  };\n\n  return (\n    <StatisticsPageContainer>\n      <HeadContainer>\n        <StatisticsPeriodPaginator onChange={takeCurrentDate} />\n        <StatisticsInfo />\n      </HeadContainer>\n      <ChartContainer>\n        <StatisticsChart selectedDay={selectedDay} />\n      </ChartContainer>\n    </StatisticsPageContainer>\n  );\n};\n\nexport default StatisticsPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","theme","PeriodPaginatorButton","_templateObject2","ButtonsWrapper","_templateObject3","Button1","_templateObject4","Button2","_templateObject5","StatisticsPageContainer","p","colors","third_background_switch","breakpoints","mobile","HeadContainer","ChartContainer","statistics_border_color_switch","CustomText","third_text_switch","TooltipStyled","statistics_tooltip_background","TooltipTitle","statistics_tooltip_text","fonts","text","TooltipText","CustomTooltip","_ref","active","payload","label","t","useTranslation","length","_jsxs","children","_jsx","value","CustomXAxisTick","props","x","y","transform","concat","dy","textAnchor","fontSize","fontFamily","CustomYAxisTick","BarCustomLabel","width","labelY","dominantBaseline","fontWeight","TitleCustomLabel","_props$viewBox","viewBox","StatisticsChart","_statisticsByMonth$to","_statisticsByDay$todo","_statisticsByMonth$in","_statisticsByDay$inPr","_statisticsByMonth$do","_statisticsByDay$done","selectedDay","dispatch","useDispatch","statistics","useSelector","selectTasksStatistics","statisticsByDay","statisticsByMonth","useEffect","getTasksStatistics","data","name","by_Month","todo","by_Day","inProgress","done","ResponsiveContainer","minWidth","minHeight","BarChart","margin","top","right","left","bottom","barCategoryGap","barGap","barSize","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","CartesianGrid","vertical","stroke","strokeWidth","XAxis","dataKey","tickLine","tick","tickMargin","YAxis","type","position","axisLine","ticks","tickCount","Label","angle","content","Tooltip","cursor","Bar","maxBarSize","minPointSize","radius","fill","LabelList","StatisticsDatePicker","onChange","date","open","_Fragment","className","DatePicker","weekStartsFrom","StatisticsDateWrapper","StatisticsPaginatorDateButton","StatisticsChangeButtonsWrapper","StatisticsButton1","StatisticsButton2","StatisticsPeriodPaginator","_useState","useState","Date","_useState2","_slicedToArray","currentDate","setCurrentDate","_useState3","_useState4","isOpen","setIsOpen","outsideReference","useRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","formattedDate","format","ref","onClick","newDate","previousDay","subDays","nextDay","addDays","InfoListContainer","InfoListItem","InfoTextFirst","InfoTextSecond","StatisticsInfo","setSelectedDay"],"sourceRoot":""}