{"version":3,"file":"static/js/246.17396300.chunk.js","mappings":"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","sources":["components/ChoosedMonth/CalendarTable/CalendarTable.styled.js","components/ChoosedMonth/CalendarTable/CalendarTaskDay/CalendarTaskDay.jsx","components/ChoosedMonth/CalendarTable/CalendarTable.jsx","components/ChoosedMonth/CalendarTable/MonthCalendarHeader/MonthCalendarHeader.styled.js","components/ChoosedMonth/CalendarTable/MonthCalendarHeader/MonthCalendarHeader.jsx","components/ChoosedMonth/ChoosedMonth.jsx","hooks/useResponse.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const GridWrapper = styled.div`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-template-rows: repeat(6, 1fr);\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: ${p => p.theme.radii.small};\n  overflow: hidden;\n  background-color: ${props => props.theme.colors.third_background_switch};\n`;\n\nexport const CurrentDay = styled.div`\n  padding: 4px 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: ${p => p.theme.colors.primary};\n  border-radius: ${p => p.theme.radii.small};\n  color: ${p => p.theme.colors.white};\n  margin-bottom: 3px;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    padding: 4px 8px;\n  }\n`;\nexport const DayWrapper = styled.div`\n  height: 25px;\n  width: 25px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.xs};\n  line-height: ${p => p.theme.lineHeights.body};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    font-size: ${p => p.theme.fontSizes.m};\n    line-height: ${p => p.theme.lineHeights.heading};\n  }\n`;\nexport const CellWrapper = styled.div`\n  min-width: 30px;\n  min-height: 84px;\n  padding: 1px;\n  border-block-end: 1px solid rgba(220, 227, 229, 0.8);\n  border-inline-end: 1px solid rgba(220, 227, 229, 0.8);\n  &:nth-child(7n) {\n    border-right: none;\n  }\n  cursor: ${props => (props.isSelectedMonth ? 'pointer' : 'auto')};\n  transition: box-shadow 300ms linear;\n  &:hover,\n  &:focus {\n    box-shadow: 0px 1px 1px ${p => p.theme.colors.calendar_shadow_switch},\n      0px 4px 4px ${p => p.theme.colors.calendar_shadow_switch},\n      1px 4px 6px ${p => p.theme.colors.calendar_shadow_switch};\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    min-width: 100px;\n    min-height: 125px;\n    padding: 4px;\n  }\n  @media screen and (min-width: ${p => p.theme.breakpoints.desktop}) {\n    min-width: 155px;\n    padding: 8px;\n  }\n`;\n\nexport const RowInCell = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`;\n\nexport const TaskListWrapper = styled.ul`\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  list-style-position: inside;\n  gap: 2px;\n`;\nexport const CalendarTableMoreBtn = styled.button`\n  border: none;\n  border-radius: 8px;\n  color: transparent;\n  text-align: start;\n  font-weight: 700;\n  font-size: 12px;\n  cursor: pointer;\n  margin-top: 0;\n  padding: 0;\n  display: none;\n  @media screen and (min-width: 768px) {\n    display: inline-block;\n    color: ${p => p.theme.colors.text};\n    background-color: ${p => p.theme.colors.white};\n  }\n  @media screen and (min-width: 1440px) {\n    color: ${p => p.theme.colors.text};\n    background-color: ${p => p.theme.colors.white};\n  }\n`;\nexport const TaskItem = styled.button`\n  border-radius: 8px;\n  padding: 4px 4px 4px 8px;\n  border: none;\n  width: 100%;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: start;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.4;\n  cursor: pointer;\n  @media screen and (min-width: 768px) {\n    font-size: 14px;\n    line-height: 18px;\n    padding: 4px 10px 4px 12px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 4px 15px 4px 12px;\n  }\n`;\n\nexport const ShowDayWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import { useNavigate } from 'react-router-dom';\nimport { TaskItem } from '../CalendarTable.styled';\n\nexport const CalendarTaskDay = ({ task }) => {\n  const navigate = useNavigate();\n  let priorityColor = '';\n  let priorityTextColor = '';\n\n  if (task.priority === 'low') {\n    priorityColor = '#ceeefd';\n    priorityTextColor = '#72c2f8';\n  } else if (task.priority === 'medium') {\n    priorityColor = '#fcf0d4';\n    priorityTextColor = '#f3b249';\n  } else if (task.priority === 'high') {\n    priorityColor = '#ffd2dd';\n    priorityTextColor = '#ea3d65';\n  }\n  const taskDate = task.date.slice(0, 10);\n\n  const handleTaskItemClick = () => {\n    navigate(`calendar/day/${taskDate}`);\n  };\n  return (\n    <TaskItem\n      type=\"button\"\n      onClick={handleTaskItemClick}\n      style={{ backgroundColor: priorityColor, color: priorityTextColor }}\n    >\n      {task.title}\n    </TaskItem>\n  );\n};\n","import { useNavigate } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { theme } from 'theme';\nimport { CalendarTaskDay } from './CalendarTaskDay/CalendarTaskDay';\nimport {\n  GridWrapper,\n  CellWrapper,\n  RowInCell,\n  ShowDayWrapper,\n  DayWrapper,\n  CurrentDay,\n  TaskListWrapper,\n  CalendarTableMoreBtn,\n} from './CalendarTable.styled';\n\nconst CalendarTable = ({ startDay, today, tasks }) => {\n  const navigate = useNavigate();\n  const totalDays = 42;\n\n  const day = startDay.clone().subtract(1, 'day');\n\n  const daysMap = [...Array(totalDays)].map(() => day.add(1, 'day').clone());\n\n  const isCurrentDay = day => moment().isSame(day, 'day');\n  const isSelectedMonth = day => today.isSame(day, 'month');\n\n  const filterTask = calendarDay => {\n    if (!tasks || tasks.length === 0) {\n      return [];\n    }\n    let dayTasksFiltered = [\n      ...tasks.filter(task => task.date === calendarDay.format('YYYY-MM-DD')),\n    ];\n    return dayTasksFiltered;\n  };\n\n  return (\n    <GridWrapper>\n      {daysMap.map(dayItem => {\n        const dayTasks = filterTask(dayItem);\n        return (\n          <CellWrapper\n            style={{\n              color: `${\n                isSelectedMonth(dayItem)\n                  ? `${theme.colors.third_text_switch}`\n                  : 'rgba(169, 169, 169, 0.4)'\n              }`,\n            }}\n            isWeekday={dayItem.day() === 6 || dayItem.day() === 0}\n            key={dayItem.unix()}\n            isSelectedMonth={isSelectedMonth(dayItem)}\n            type=\"button\"\n            onClick={() =>\n              isSelectedMonth(dayItem) &&\n              navigate(`/calendar/day/${dayItem.format('YYYY-MM-DD')}`)\n            }\n          >\n            <RowInCell justifyContent={'flex-end'}>\n              <ShowDayWrapper>\n                <DayWrapper>\n                  {isCurrentDay(dayItem) ? (\n                    <CurrentDay>{dayItem.format('D')}</CurrentDay>\n                  ) : (\n                    dayItem.format('D')\n                  )}\n                </DayWrapper>\n              </ShowDayWrapper>\n              <TaskListWrapper>\n                {dayTasks.slice(0, 2).map(task => (\n                  <li key={task._id}>\n                    <CalendarTaskDay task={task} />\n                  </li>\n                ))}\n                {dayTasks\n                  .map(tasks => tasks.tasks)\n                  .reduce((t1, t2) => t1.concat(t2), []).length > 2 && (\n                  <li key=\"more\">\n                    <CalendarTableMoreBtn type=\"button\">\n                      +{' '}\n                      {filterTask(dayItem)\n                        .map(tasks => tasks.tasks)\n                        .reduce((t1, t2) => t1.concat(t2), []).length - 2}{' '}\n                      tasks...\n                    </CalendarTableMoreBtn>\n                  </li>\n                )}\n              </TaskListWrapper>\n            </RowInCell>\n          </CellWrapper>\n        );\n      })}\n    </GridWrapper>\n  );\n};\n\nexport default CalendarTable;\n","import styled from 'styled-components';\n\nexport const WeekHeaderList = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  border: 1px solid rgba(220, 227, 229, 0.8);\n  border-radius: 8px;\n  margin-bottom: 14px;\n  padding: 16px 16px;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.12;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.primary_text_switch};\n  background-color: ${p => p.theme.colors.third_background_switch};\n  @media screen and (min-width: 768px) {\n    margin-bottom: 18px;\n    padding: 14px 40px;\n  }\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 15px;\n    padding: 14px 60px;\n  }\n`;\n\nexport const WeekendHeaderItem = styled.li`\n  color: ${p => p.theme.colors.primary};\n`;\n","import { useResponse } from 'hooks/useResponse';\nimport {\n  WeekendHeaderItem,\n  WeekHeaderList,\n} from './MonthCalendarHeader.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const MonthCalendarHeader = () => {\n  const mediaResponse = useResponse();\n  const isMobile = mediaResponse.isMobile;\n  const { t } = useTranslation();\n\n  return (\n    <>\n      {isMobile ? (\n        <WeekHeaderList>\n          <li>{t('abbr_Mon')}</li>\n          <li>{t('abbr_Tue')}</li>\n          <li>{t('abbr_Wed')}</li>\n          <li>{t('abbr_Thu')}</li>\n          <li>{t('abbr_Fri')}</li>\n          <WeekendHeaderItem>{t('abbr_Sat')}</WeekendHeaderItem>\n          <WeekendHeaderItem>{t('abbr_Sun')}</WeekendHeaderItem>\n        </WeekHeaderList>\n      ) : (\n        <WeekHeaderList>\n          <li>{t('Mon')}</li>\n          <li>{t('Tue')}</li>\n          <li>{t('Wed')}</li>\n          <li>{t('Thu')}</li>\n          <li>{t('Fri')}</li>\n          <WeekendHeaderItem>{t('Sat')}</WeekendHeaderItem>\n          <WeekendHeaderItem>{t('Sun')}</WeekendHeaderItem>\n        </WeekHeaderList>\n      )}\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport { selectTasks } from 'redux/tasks/selectors';\nimport { getMonthTasks } from 'redux/tasks/operations';\nimport CalendarTable from './CalendarTable/CalendarTable';\nimport { MonthCalendarHeader } from './CalendarTable/MonthCalendarHeader/MonthCalendarHeader';\n\nconst ChoosedMonth = () => {\n  const dispatch = useDispatch();\n\n  const tasks = useSelector(selectTasks);\n\n  moment.updateLocale('en', { week: { dow: 1 } });\n\n  const { currentDate } = useParams();\n  const today = moment(currentDate);\n  const startDay = today.clone().startOf('month').startOf('week');\n\n  useEffect(() => {\n    dispatch(getMonthTasks(currentDate));\n  }, [currentDate, dispatch]);\n\n  return (\n    <>\n      <MonthCalendarHeader />\n      <CalendarTable startDay={startDay} today={today} tasks={tasks} />\n    </>\n  );\n};\n\nexport default ChoosedMonth;\n","import { useMediaQuery } from 'react-responsive';\n\nexport const useResponse = () => {\n  const isDesktop = useMediaQuery({ minWidth: 1440 });\n\n  const isTablet = useMediaQuery({ minWidth: 768, maxWidth: 1439 });\n\n  const isMobile = useMediaQuery({ maxWidth: 767 });\n\n  const viewportHeight = window.innerHeight;\n\n  return {\n    isDesktop,\n    isTablet,\n    isMobile,\n    viewportHeight,\n  };\n};\n"],"names":["GridWrapper","styled","_templateObject","_taggedTemplateLiteral","p","theme","radii","small","props","colors","third_background_switch","CurrentDay","_templateObject2","primary","white","breakpoints","table","DayWrapper","_templateObject3","fontWeights","bold","fontSizes","xs","lineHeights","body","m","heading","CellWrapper","_templateObject4","isSelectedMonth","calendar_shadow_switch","desktop","RowInCell","_templateObject5","TaskListWrapper","_templateObject6","CalendarTableMoreBtn","_templateObject7","text","TaskItem","_templateObject8","ShowDayWrapper","_templateObject9","CalendarTaskDay","_ref","task","navigate","useNavigate","priorityColor","priorityTextColor","priority","taskDate","date","slice","_jsx","type","onClick","concat","style","backgroundColor","color","children","title","startDay","today","tasks","day","clone","subtract","daysMap","_toConsumableArray","Array","map","add","isCurrentDay","moment","isSame","filterTask","calendarDay","length","filter","format","dayItem","dayTasks","isWeekday","_jsxs","justifyContent","_id","reduce","t1","t2","unix","WeekHeaderList","primary_text_switch","WeekendHeaderItem","MonthCalendarHeader","isMobile","useResponse","t","useTranslation","_Fragment","dispatch","useDispatch","useSelector","selectTasks","week","dow","currentDate","useParams","startOf","useEffect","getMonthTasks","CalendarTable","isDesktop","useMediaQuery","minWidth","isTablet","maxWidth","viewportHeight","window","innerHeight"],"sourceRoot":""}