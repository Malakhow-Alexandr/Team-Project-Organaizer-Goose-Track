{"version":3,"file":"static/js/804.b50c83a2.chunk.js","mappings":"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","sources":["components/CalendarToolbar/PeriodPaginator/PeriodPaginator.styled.js","components/CalendarToolbar/CalendarDataPicker/CalendarDataPicker.jsx","components/CalendarToolbar/PeriodPaginator/PeriodPaginator.jsx","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.styled.js","components/CalendarToolbar/PeriodTypeSelect/PeriodTypeSelect.jsx","components/CalendarToolbar/CalendarToolbar.styled.js","components/CalendarToolbar/CalendarToolbar.jsx","pages/CalendarPage/CalendarPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { theme } from 'theme';\nexport const Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  border-radius: 8px;\n  margin-bottom: 14px;\n  border: none;\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    align-items: center;\n  }\n  @media screen and (max-width: ${theme.breakpoints.mobileMax}) {\n    width: 100%;\n  }\n`;\nexport const PeriodPaginatorButton = styled.p`\n  display: flex;\n  width: 140px;\n  height: 30px;\n  gap: 4px;\n  align-items: center;\n  justify-content: center;\n  padding: 6px 1px;\n  margin-right: 8px;\n  border: none;\n  color: ${theme.colors.white};\n  background-color: ${theme.colors.primary};\n  border-radius: 8px;\n  font-weight: ${theme.fontWeights.bold};\n  font-size: ${theme.fontSizes.s};\n  line-height: ${theme.lineHeights.body};\n  &:hover {\n    background-color: rgb(43, 120, 239);\n  }\n  &:active {\n    filter: blur(0.1rem);\n  }\n  transition: all ease-in-out 250ms;\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    display: flex;\n    gap: 8px;\n    width: 170px;\n    height: 34px;\n    padding: 8px 1px;\n    margin-right: 8px;\n    margin-bottom: 0;\n    font-size: ${theme.fontSizes.m};\n  }\n`;\n\nexport const ButtonsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  border: none;\n`;\n\nexport const Button1 = styled.button`\n  height: 30px;\n  width: 38px;\n  background-color: ${theme.colors.third_background_switch};\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.second_text_switch};\n  border: ${theme.borders.normal};\n  border-color: ${theme.colors.calendar_border_color_switch};\n  border-radius: ${theme.radii.small};\n  border-bottom-right-radius: 0;\n  border-top-right-radius: 0;\n  cursor: pointer;\n  &:hover {\n    background-color: ${theme.colors.background_switch};\n    color: ${theme.colors.third_text_switch};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    height: 34px;\n  }\n  transition: all ease-in-out 250ms;\n`;\n\nexport const Button2 = styled.button`\n  height: 30px;\n  width: 38px;\n  background-color: ${theme.colors.third_background_switch};\n  font-size: ${theme.fontSizes.l};\n  color: ${theme.colors.second_text_switch};\n  border: ${theme.borders.normal};\n  border-color: ${theme.colors.calendar_border_color_switch};\n  border-radius: ${theme.radii.small};\n  border-bottom-left-radius: 0;\n  border-top-left-radius: 0;\n  cursor: pointer;\n  &:hover {\n    background-color: ${theme.colors.background_switch};\n    color: ${theme.colors.primary_text_switch};\n  }\n\n  @media screen and (min-width: ${theme.breakpoints.table}) {\n    height: 34px;\n  }\n  transition: all ease-in-out 250ms;\n`;\n","import DatePicker from 'sassy-datepicker';\nimport './CalendarDataPicker.css';\n\nexport const CalendarDataPicker = ({ onChange, date }) => {\n  return (\n    <>\n      <DatePicker weekStartsFrom=\"Monday\" onChange={onChange} value={date} />\n    </>\n  );\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { format } from 'date-fns';\nimport { useParams } from 'react-router';\nimport moment from 'moment';\n\nimport { CalendarDataPicker } from '../CalendarDataPicker/CalendarDataPicker';\n\nimport {\n  Wrapper,\n  PeriodPaginatorButton,\n  ButtonsWrapper,\n  Button1,\n  Button2,\n} from './PeriodPaginator.styled';\n\nconst PeriodPaginator = ({ prevHandler, nextHandler, type }) => {\n  const params = useParams();\n  const today = moment(params.currentDay ?? params.currentDate, 'YYYY-MM-DD');\n  const currentDate = today.format('DD MMMM YYYY');\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [date, setDate] = useState(new Date());\n  const navigate = useNavigate();\n\n  // Hook для закриття DatePicker\n  const outsideReference = useRef(null);\n\n  useEffect(() => {\n    function handleClickOutside(event) {\n      if (\n        outsideReference.current &&\n        !outsideReference.current.contains(event.target)\n      ) {\n        setIsOpen(false);\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [setIsOpen]);\n\n  const handleClick = e => {\n    e.preventDefault();\n    setIsOpen(!isOpen);\n  };\n\n  const navigateToDate = newDate => {\n    return `/calendar/day/${format(newDate, 'yyyy-MM-dd')}`;\n  };\n\n  const onChange = newDate => {\n    navigate(navigateToDate(newDate));\n    setDate(newDate);\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <Wrapper ref={outsideReference}>\n      <PeriodPaginatorButton onClick={handleClick}>\n        {type === 'month'\n          ? currentDate.slice(3, currentDate.length)\n          : currentDate}\n      </PeriodPaginatorButton>\n      {isOpen ? (\n        <CalendarDataPicker open={isOpen} onChange={onChange} value={date} />\n      ) : null}\n      <ButtonsWrapper>\n        <Button1 onClick={() => prevHandler(type)}>&lt;</Button1>\n        <Button2 onClick={() => nextHandler(type)}>&gt;</Button2>\n      </ButtonsWrapper>\n    </Wrapper>\n  );\n};\nexport default PeriodPaginator;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: flex;\n  margin-bottom: 14px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  font-weight: ${p => p.theme.fontWeights.normal};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: ${p => p.theme.lineHeights.body};\n`;\n\nexport const Link = styled(NavLink)`\n  color: ${p => p.theme.colors.primary};\n  background-color: ${p => p.theme.colors.calendar_month_day_color_switch};\n\n  &.active {\n    background-color: ${p => p.theme.colors.calendar_active_color_link_switch};\n    color: ${p => p.theme.colors.side_bar_content_hover_switch};\n  }\n  &.month {\n    padding: 8px 16px;\n    border-radius: 8px 0 0 8px;\n  }\n  &.day {\n    padding: 8px 25px;\n    border-radius: 0 8px 8px 0;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { Item, List, Link } from './PeriodTypeSelect.styled';\nimport { useTranslation } from 'react-i18next';\n\nexport const PeriodTypeSelect = ({ today, onChangeType }) => {\n  const { t } = useTranslation();\n  const location = useLocation();\n  const isMonthRoute = location.pathname.includes('month');\n  const isDayRoute = location.pathname.includes('day');\n\n  return (\n    <List>\n      <Item>\n        <Link\n          className={`${isMonthRoute ? 'active' : ''} month`}\n          to={`month/${today.format('YYYY-MM-DD')}`}\n          onClick={() => onChangeType('month')}\n        >\n          {t('Month')}\n        </Link>\n      </Item>\n      <Item>\n        <Link\n          className={`${isDayRoute ? 'active' : ''} day`}\n          to={`day/${moment().format('YYYY-MM-DD')}`}\n          onClick={() => onChangeType('day')}\n        >\n          {t('Day')}\n        </Link>\n      </Item>\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PeriodPaginator from './PeriodPaginator/PeriodPaginator';\nimport { PeriodTypeSelect } from './PeriodTypeSelect/PeriodTypeSelect';\nimport { Wrapper } from './CalendarToolbar.styled';\n\nexport const CalendarToolbar = ({ today, prevHandler, nextHandler }) => {\n  const [type, setType] = useState('month');\n\n  const location = useLocation();\n\n  const pathname = location.pathname.slice(0, -11);\n\n  useEffect(() => {\n    if (pathname.endsWith('/calendar/day')) {\n      setType('day');\n      return;\n    }\n    setType('month');\n  }, [pathname]);\n  return (\n    <Wrapper>\n      <PeriodPaginator\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n        type={type}\n      />\n\n      <PeriodTypeSelect today={today} onChangeType={setType} />\n    </Wrapper>\n  );\n};\n","import { useNavigate } from 'react-router';\nimport { Outlet, useParams } from 'react-router-dom';\nimport moment from 'moment';\n\nimport { CalendarToolbar } from 'components/CalendarToolbar/CalendarToolbar';\n\nconst CalendarPage = () => {\n  const params = useParams();\n  const currentDate = params.currentDate ?? params.currentDay;\n\n  const date = moment(new Date(currentDate));\n\n  const navigate = useNavigate();\n\n  const startDay = date.clone().startOf('month').startOf('week');\n\n  const prevHandler = type => {\n    const newDate = date.clone().subtract(1, type).toISOString().split('T')[0];\n    navigate(`/calendar/${type}/${newDate}`);\n  };\n  const nextHandler = type => {\n    const newDate = date.clone().add(1, type).toISOString().split('T')[0];\n    navigate(`/calendar/${type}/${newDate}`);\n  };\n\n  return (\n    <>\n      <CalendarToolbar\n        today={date}\n        prevHandler={prevHandler}\n        nextHandler={nextHandler}\n      />\n      <Outlet context={{ startDay, today: date, currentDate }} />\n    </>\n  );\n};\n\nexport default CalendarPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","theme","PeriodPaginatorButton","_templateObject2","ButtonsWrapper","_templateObject3","Button1","_templateObject4","Button2","_templateObject5","CalendarDataPicker","_ref","onChange","date","_jsx","_Fragment","children","DatePicker","weekStartsFrom","value","_params$currentDay","prevHandler","nextHandler","type","params","useParams","currentDate","moment","currentDay","format","_useState","useState","_useState2","_slicedToArray","isOpen","setIsOpen","_useState3","Date","_useState4","setDate","navigate","useNavigate","outsideReference","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","_jsxs","ref","onClick","e","preventDefault","slice","length","open","newDate","concat","navigateToDate","List","Item","p","fontWeights","normal","fontSizes","s","lineHeights","body","Link","NavLink","colors","primary","calendar_month_day_color_switch","calendar_active_color_link_switch","side_bar_content_hover_switch","breakpoints","table","m","PeriodTypeSelect","today","onChangeType","t","useTranslation","location","useLocation","isMonthRoute","pathname","includes","isDayRoute","className","to","CalendarToolbar","setType","endsWith","PeriodPaginator","_params$currentDate","startDay","clone","startOf","subtract","toISOString","split","add","Outlet","context"],"sourceRoot":""}