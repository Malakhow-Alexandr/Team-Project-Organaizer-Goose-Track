{"version":3,"file":"static/js/574.15cfafcf.chunk.js","mappings":"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","sources":["components/AuthNavigate/AuthNavigate.styled.jsx","components/AuthNavigate/AuthNavigate.jsx","components/UserForm/UserForm.styled.jsx","components/UserForm/UserForm.jsx","hooks/useAuth.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const AuthNavLink = styled(Link)`\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  color: ${props => props.theme.colors.primary};\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n  text-decoration-line: underline;\n\n  @media screen and (min-width: 768px) {\n    font-size: 18px;\n  }\n`;\n","import React from 'react';\nimport { AuthNavLink } from './AuthNavigate.styled';\n\nexport const AuthNavigate = ({ link, text }) => {\n  return (\n    <div>\n      <AuthNavLink to={link}>{text}</AuthNavLink>\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { AiFillPlusCircle, AiOutlineUser } from 'react-icons/ai';\nimport { DatePicker } from '@mui/x-date-pickers';\n\nexport const Container = styled.div`\n  max-width: 335px;\n  background-color: ${props => props.theme.colors.background_switch};\n  margin: 0 auto;\n  @media (min-width: 768px) {\n    max-width: 100%;\n    min-width: 704px;\n  }\n  @media (min-width: 1440px) {\n    min-width: 1087px;\n    max-width: 100%;\n  }\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  padding-top: 59px;\n  padding-bottom: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  background-color: ${props => props.theme.colors.third_background_switch};\n  border-radius: ${props => props.theme.radii.big};\n\n  @media (min-width: 768px) {\n    align-items: center;\n    padding-top: 40px;\n  }\n  @media (min-width: 1440px) {\n    padding-top: 60px;\n    padding-bottom: 60px;\n  }\n  .InvalidInput {\n    border: 1px solid ${props => props.theme.colors.redError};\n  }\n  .ErrorMsg {\n    color: green;\n  }\n`;\n\nexport const Avatar = styled.div`\n  width: 72px;\n  height: 72px;\n  position: absolute;\n  left: calc(50% - 36px);\n  top: -36px;\n  background-color: white;\n  border: 2px solid #3e85f3;\n  border-radius: ${props => props.theme.radii.round};\n  @media (min-width: 768px) {\n    position: static;\n    width: 124px;\n    height: 124px;\n  }\n  @media (min-width: 1440px) {\n    margin-bottom: 20px;\n  }\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: ${props => props.theme.radii.round};\n  }\n`;\nexport const AvatarDefault = styled(AiOutlineUser)`\n  position: absolute;\n  left: calc(50% - 25px);\n  top: 5px;\n  width: 50px;\n  height: 50px;\n  @media (min-width: 768px) {\n    left: calc(50% - 47px);\n    top: 45px;\n    width: 95px;\n    height: 95px;\n  }\n  @media (min-width: 1440px) {\n    left: calc(50% - 47px);\n    top: 65px;\n    width: 95px;\n    height: 95px;\n  }\n`;\nexport const AddIcon = styled(AiFillPlusCircle)`\n  position: absolute;\n  left: calc(50% + 15px);\n  top: 24px;\n  width: 14px;\n  height: 14px;\n  font-size: 12px;\n  cursor: pointer;\n  color: #3e85f3;\n\n  @media (min-width: 768px) {\n    width: 24px;\n    height: 24px;\n    top: 147px;\n    left: 53%;\n  }\n  @media (min-width: 1440px) {\n    top: 170px;\n    left: 52%;\n  }\n`;\nexport const UserName = styled.p`\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.bold};\n  font-size: ${props => props.theme.fontSizes.s};\n  color: ${props => props.theme.colors.primary_text_switch};\n  text-align: center;\n`;\nexport const Text = styled.p`\n  margin-top: 4px;\n  margin-bottom: 40px;\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.normal};\n  font-size: ${props => props.theme.fontSizes.xs};\n  color: ${props => props.theme.colors.user_label_color_switch};\n  text-align: center;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  @media (min-width: 1440px) {\n    width: 758px;\n    flex-direction: initial;\n    flex-wrap: wrap;\n    column-gap: 50px;\n    row-gap: 24px;\n  }\n`;\nexport const WrapperInput = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 50px;\n  justify-content: flex-end;\n  @media (min-width: 768px) {\n    width: 354px;\n  }\n  @media (min-width: 1440px) {\n    width: 354px;\n  }\n`;\nexport const InputName = styled.label`\n  font-family: ${props => props.theme.fonts.text};\n  font-size: ${props => props.theme.fontSizes.xs};\n  font-weight: 400;\n  margin-bottom: 8px;\n  line-height: ${props => props.theme.lineHeights.heading};\n  color: ${props => props.theme.colors.user_label_color_switch};\n`;\nexport const Input = styled.input`\n  height: 42px;\n  padding-left: 14px;\n  padding-right: 14px;\n  outline: none;\n  border-color: ${p => p.theme.colors.user_input_border_color_switch};\n  border-radius: ${props => props.theme.radii.small};\n  color: ${props => props.theme.colors.primary_text_switch};\n\n  ${props =>\n    props.value &&\n    `\n    font-family: 'Inter';\n    font-size: 14px;\n    font-weight:600;\n    color: ${props => props.theme.colors.primary_text_switch};\n\n  `};\n  background-color: transparent;\n  &::placeholder {\n    font-family: ${props => props.theme.fonts.text};\n    font-size: ${props => props.theme.fontSizes.s};\n    /* color: ${props => props.theme.colors.user_input_border_color_switch}; */\n  }\n  &:hover,\n  &:focus {\n    border: 1px solid #111111;\n  }\n  @media (min-width: 768px) {\n    height: 46px;\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: ${props => props.theme.colors.redError};\n  font-size: 12px;\n  margin-top: 3px;\n  margin-left: 8px;\n  @media (min-width: 768px) {\n    margin-top: 4px;\n    font-size: 14px;\n  }\n`;\nexport const SubmitBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 40px;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 50px;\n  padding-right: 50px;\n  max-width: 200px;\n  height: 46px;\n  font-family: ${props => props.theme.fonts.text};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  line-height: ${props => props.theme.lineHeights.body};\n  font-size: ${props => props.theme.fontSizes.s};\n  text-align: center;\n\n  color: ${props => props.theme.colors.white};\n\n  border-radius: ${props => props.theme.radii.big};\n\n  border: ${props => props.theme.borders.none};\n  cursor: ${props => (props.disabled ? 'default' : 'pointer')};\n\n  background-color: ${props =>\n    props.disabled ? '#c9cdd3' : props.theme.colors.primary};\n\n  @media (min-width: 768px) {\n    width: 262px;\n    height: 48px;\n  }\n  @media (min-width: 1440px) {\n    margin-top: 88px;\n  }\n`;\n\nexport const StyledDataPicker = styled(DatePicker)`\n  input {\n    padding-left: 0px;\n    color: ${props => props.theme.colors.primary_text_switch};\n  }\n  input::placeholder {\n    font-family: ${props => props.theme.fonts.text};\n    font-size: ${props => props.theme.fontSizes.s};\n    color: ${props => props.theme.colors.user_label_color_switch};\n    font-weight: 600;\n    opacity: 1;\n  }\n\n  /* Input value */\n  .MuiInputBase-root {\n    position: relative;\n    font-family: 'Inter';\n    font-size: 14px;\n    font-weight: 600;\n  }\n  .MuiButtonBase-root {\n    color: ${props => props.theme.colors.calendar_border_color_switch};\n  }\n  .MuiOutlinedInput-notchedOutline {\n    border: 1px solid #11111126;\n  }\n\n  .MuiOutlinedInput-root {\n    height: 44px;\n    padding-left: 14px;\n    padding-right: 14px;\n    outline: none;\n    border: none;\n    border-radius: ${props => props.theme.radii.small};\n\n    .MuiOutlinedInput-notchedOutline {\n      border-color: ${props =>\n        props.theme.colors.user_input_border_color_switch};\n    }\n    &.Mui-focused .MuiOutlinedInput-notchedOutline {\n      border: 1px solid #111111;\n    }\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useAuth } from 'hooks/useAuth';\nimport { updateUser } from 'redux/auth/operations';\nimport * as Yup from 'yup';\nimport { useFormik } from 'formik';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport moment from 'moment/moment';\nimport {\n  Container,\n  Form,\n  InputName,\n  Avatar,\n  AddIcon,\n  AvatarDefault,\n  SubmitBtn,\n  UserName,\n  Text,\n  StyledDataPicker,\n  Input,\n  ErrorMessage,\n  Wrapper,\n  WrapperInput,\n} from './UserForm.styled';\nimport { useTranslation } from 'react-i18next';\nimport { AuthNavigate } from 'components/AuthNavigate/AuthNavigate';\nimport { selectIsLoggedGoogle } from 'redux/auth/selectors';\nimport { toast } from 'react-hot-toast';\n\nconst phoneRegexp = /^(\\d{2})\\s\\((\\d{3})\\)\\s(\\d{3})\\s(\\d{2})\\s(\\d{2})$/;\nconst skypeNumberRegexp = /^\\+[1-9]\\d{0,2}[.-]?\\d{1,14}$/;\nconst birthdayRegexp = /^\\d{2}\\/\\d{2}\\/\\d{4}$/;\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(35, 'Too Long!')\n    .required('Name is required'),\n  birthday: Yup.string()\n    .notRequired()\n    .matches(birthdayRegexp, {\n      message: 'Invalid birthday',\n    })\n    .notRequired(),\n  email: Yup.string().email('Invalid email').required('Email is required'),\n  phone: Yup.string()\n    .matches(phoneRegexp, {\n      message: 'Invalid phone',\n    })\n    .notRequired(),\n  skype: Yup.string()\n    .max(16, 'Too Long!')\n    .matches(skypeNumberRegexp, {\n      message: 'Invalid skype',\n    })\n    .notRequired(),\n  telegram: Yup.string().max(35, 'Too Long!').notRequired(),\n});\n\nconst tostStyleError = {\n  borderRadius: '8px',\n  background: '#13151A',\n  color: '#3E85F3',\n};\n\n\nconst UserForm = () => {\n  const { t } = useTranslation();\n  const isLogedGoogle = useSelector(selectIsLoggedGoogle);\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  const [userAvatar, setUserAvatar] = useState(user.avatarURL);\n  const [birthdayDate, setBirthdayDate] = useState(null);\n  const [isFormChanged, setIsFormChanged] = useState(false);\n  const { errors, touched, values, handleSubmit, handleBlur, setFieldValue } =\n    useFormik({\n      initialValues: {\n        name: user.name,\n        email: user.email,\n        avatar: user.avatarURL,\n        phone: user.phone,\n        birthday: user.birthday,\n        telegram: user.telegram,\n      },\n      validationSchema: validationSchema,\n      onSubmit: values => {\n        try {\n          if (values.avatar === user.avatarURL) {\n            const { avatar, ...updatedValues } = values;\n            dispatch(updateUser(updatedValues));\n          } else {\n            dispatch(updateUser(values));\n          }\n          setIsFormChanged(false);\n        } catch (error) {\n          return error\n        }\n      },\n    });\n\n  useEffect(() => {\n    setFieldValue('name', user.name);\n    setFieldValue('email', user.email);\n    setFieldValue('phone', user.phone);\n    setFieldValue('telegram', user.telegram);\n    setFieldValue('birthday', user.birthday);\n\n    setUserAvatar(user.avatarURL);\n    setBirthdayDate(user.birthday);\n  }, [user, setFieldValue]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setFieldValue(name, value);\n    setIsFormChanged(true);\n  };\n\n  const handleAvatarUpload = event => {\n    \n    const file = event.currentTarget.files[0];\n    if(file.type !== 'image/png' && file.type !== 'image/jpeg') {\n      toast.error(`Invalid file format! Please choose a PNG or JPEG image!`, {\n        style: tostStyleError,\n      });\n      return\n    }\n\n    if(file.size >= 2000000) {\n      toast.error(`Selected file is too large! Please select a file under 2KB in size!`, {\n        style: tostStyleError,\n      });\n      return\n    }\n    setFieldValue('avatar', file);\n    setIsFormChanged(true);\n    if (file) {\n      const imageUrl = URL.createObjectURL(file);\n      setUserAvatar(imageUrl);\n    }\n  };\n\n  const currentDate = moment().format('DD/MM/YYYY');\n\n  const handleDatePicker = date => {\n    if (!date) setFieldValue('birthday', '');\n    const formattedDate = moment(date.$d).format('DD/MM/YYYY');\n    setFieldValue('birthday', formattedDate);\n    setIsFormChanged(true);\n  };\n\n  const autoFormatPhoneNumber = event => {\n    const phoneNumber = event.target.value.replace(/[^\\d]/g, '');\n\n    const countryCode = phoneNumber.slice(0, 2);\n    const areaCode = phoneNumber.slice(2, 5);\n    const firstPart = phoneNumber.slice(5, 8);\n    const secondPart = phoneNumber.slice(8, 10);\n    const thirdPart = phoneNumber.slice(10, 12);\n\n    const formattedPhoneNumber = [\n      countryCode,\n      areaCode ? `(${areaCode})` : '',\n      firstPart,\n      secondPart,\n      thirdPart,\n    ]\n      .filter(part => part !== '')\n      .join(' ')\n      .trim();\n\n    setFieldValue('phone', formattedPhoneNumber);\n    setIsFormChanged(true);\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit}>\n        {/* avatar */}\n        <Avatar>\n          {userAvatar ? (\n            <img src={userAvatar} alt=\"Avatar\" />\n          ) : (\n            <AvatarDefault />\n          )}\n        </Avatar>\n\n        <InputName>\n          <input\n            name=\"avatar\"\n            type=\"file\"\n            onChange={handleAvatarUpload}\n            style={{ display: 'none' }}\n          />\n          <AddIcon />\n        </InputName>\n        <UserName>{user.name}</UserName>\n        <Text>{t('User')}</Text>\n        {/* username */}\n        <Wrapper>\n          <WrapperInput>\n            <InputName>{t('User Name')}</InputName>\n            <Input\n              name=\"name\"\n              placeholder={t('User Name')}\n              value={values.name || ''}\n              onChange={handleInputChange}\n              onBlur={handleBlur}\n              className={errors.name && touched.name ? 'InvalidInput' : ''}\n            />\n            {errors.name && touched.name && (\n              <ErrorMessage>{errors.name}</ErrorMessage>\n            )}\n          </WrapperInput>\n          {/* birthday */}\n          <WrapperInput>\n            <InputName>{t('Birthday')}</InputName>\n            <LocalizationProvider dateAdapter={AdapterDayjs}>\n              <StyledDataPicker\n                disableFuture\n                closeOnSelect={true}\n                slotProps={{\n                  textField: {\n                    placeholder: birthdayDate || `${currentDate}`,\n                  },\n                }}\n                onChange={handleDatePicker}\n                name=\"birthday\"\n                views={['year', 'month', 'day']}\n                format=\"DD/MM/YYYY\"\n              />\n            </LocalizationProvider>\n          </WrapperInput>\n          {/* email */}\n          <WrapperInput>\n            <InputName>{t('Email')} </InputName>\n            <Input\n              name=\"email\"\n              value={values.email || ''}\n              placeholder={t('Email')}\n              onChange={handleInputChange}\n              onBlur={handleBlur}\n              className={errors.email && touched.email ? 'InvalidInput' : ''}\n            />\n            {errors.email && touched.email && (\n              <ErrorMessage>{errors.email}</ErrorMessage>\n            )}\n          </WrapperInput>\n          {/* phone */}\n          <WrapperInput>\n            <InputName>{t('Phone')}</InputName>\n            <Input\n              name=\"phone\"\n              placeholder=\"ex. 01 (234) 567 89 01\"\n              value={values.phone || ''}\n              onChange={autoFormatPhoneNumber}\n              onBlur={handleBlur}\n              className={errors.phone && touched.phone ? 'InvalidInput' : ''}\n            />\n            {errors.phone && touched.phone && (\n              <ErrorMessage>{errors.phone}</ErrorMessage>\n            )}\n          </WrapperInput>\n          {/* telegram */}\n          <WrapperInput>\n            <InputName>{t('Telegram')}</InputName>\n            <Input\n              name=\"telegram\"\n              value={values.telegram || ''}\n              placeholder={t('Add your telegram')}\n              onChange={handleInputChange}\n              onBlur={handleBlur}\n              className={\n                errors.telegram && touched.telegram ? 'InvalidInput' : ''\n              }\n            />\n            {errors.telegram && touched.telegram && (\n              <ErrorMessage>{errors.telegram}</ErrorMessage>\n            )}\n          </WrapperInput>\n          {/* change password */}\n          {!isLogedGoogle && (\n            <WrapperInput>\n              <AuthNavigate link={'/password'} text={t('changePassword')} />\n            </WrapperInput>\n          )}\n        </Wrapper>\n        <SubmitBtn disabled={!isFormChanged} type=\"submit\">\n          {t('Save changes')}\n        </SubmitBtn>\n      </Form>\n    </Container>\n  );\n};\n\nexport default UserForm;\n","import { useSelector } from 'react-redux';\nimport {\n  selectIsLoggedIn,\n  selectIsRefreshing,\n  selectUser,\n} from '../redux/auth/selectors';\n\nexport const useAuth = () => {\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isRefreshing = useSelector(selectIsRefreshing);\n  const user = useSelector(selectUser);\n\n  return {\n    isLoggedIn,\n    isRefreshing,\n    user,\n  };\n};\n"],"names":["AuthNavLink","styled","Link","_templateObject","_taggedTemplateLiteral","props","theme","fontSizes","xs","fonts","heading","fontWeights","colors","primary","AuthNavigate","_ref","link","text","_jsx","children","to","Container","background_switch","Form","_templateObject2","third_background_switch","radii","big","redError","Avatar","_templateObject3","round","AvatarDefault","AiOutlineUser","_templateObject4","AddIcon","AiFillPlusCircle","_templateObject5","UserName","_templateObject6","bold","s","primary_text_switch","Text","_templateObject7","normal","user_label_color_switch","Wrapper","_templateObject8","WrapperInput","_templateObject9","InputName","_templateObject10","lineHeights","Input","_templateObject11","p","user_input_border_color_switch","small","value","concat","ErrorMessage","_templateObject12","SubmitBtn","_templateObject13","body","white","borders","none","disabled","StyledDataPicker","DatePicker","_templateObject14","calendar_border_color_switch","validationSchema","Yup","shape","name","min","max","required","birthday","notRequired","matches","message","email","phone","skype","telegram","tostStyleError","borderRadius","background","color","t","useTranslation","isLogedGoogle","useSelector","selectIsLoggedGoogle","dispatch","useDispatch","user","useAuth","_useState","useState","avatarURL","_useState2","_slicedToArray","userAvatar","setUserAvatar","_useState3","_useState4","birthdayDate","setBirthdayDate","_useState5","_useState6","isFormChanged","setIsFormChanged","_useFormik","useFormik","initialValues","avatar","onSubmit","values","updatedValues","_objectWithoutProperties","_excluded","updateUser","error","errors","touched","handleSubmit","handleBlur","setFieldValue","useEffect","handleInputChange","event","_event$target","target","currentDate","moment","format","_jsxs","src","alt","type","onChange","file","currentTarget","files","size","toast","style","imageUrl","URL","createObjectURL","display","placeholder","onBlur","className","LocalizationProvider","dateAdapter","AdapterDayjs","disableFuture","closeOnSelect","slotProps","textField","date","formattedDate","$d","views","phoneNumber","replace","countryCode","slice","areaCode","firstPart","secondPart","thirdPart","formattedPhoneNumber","filter","part","join","trim","isLoggedIn","selectIsLoggedIn","isRefreshing","selectIsRefreshing","selectUser"],"sourceRoot":""}