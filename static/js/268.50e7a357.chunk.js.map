{"version":3,"file":"static/js/268.50e7a357.chunk.js","mappings":"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","sources":["components/LoaderForBtn/LoaderForBtn.styled.jsx","components/LoaderForBtn/LoaderForBtn.jsx","components/passDifficultyScale/passDifficultyScale.styled.jsx","components/passDifficultyScale/passDifficultyScale.jsx","pages/PasswordPage/PasswordPage.styled.jsx","pages/PasswordPage/PasswordPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SpinBtn = styled.span`\n  display: inline-block;\n  font-size: 24px;\n  font-family: Arial, Helvetica, sans-serif;\n  font-weight: bold;\n  color: #fff;\n  position: relative;\n  \n  ::before {\n    content: '';\n    position: absolute;\n    left: 17px;\n    bottom: 4px;\n    width: 15px;\n    height: 15px;\n    border-radius: 50%;\n    border: 2px solid #fff;\n    border-bottom-color: #ff3d00;\n    box-sizing: border-box;\n    animation: rotation 0.6s linear infinite;\n  }\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\nimport { SpinBtn } from './LoaderForBtn.styled';\n\nexport const LoaderForBtn = () => {\n  return <SpinBtn className=\"loader\">L &nbsp; ading</SpinBtn>;\n};\n","import styled from 'styled-components';\n\nconst green = p => p.theme.colors.greenValid;\nconst red = p => p.theme.colors.redErrorLight;\n\nexport const List = styled.ul`\n  display: flex;\n  gap: 7px;\n  position: absolute;\n  top: 5px;\n  right: 3px;\n`;\n\nexport const Item = styled.li`\n  position: relative;\n  width: 40px;\n  height: 7px;\n  border-radius: 5px;\n\n  font-size: 12px;\n  text-align: center;\n\n  background-color: ${({ state }) =>\n    state === 'red' ? red : state === 'strong' ? green : 'lightgray'};\n\n  &:first-child {\n    color: ${red};\n    background-color: ${({ state }) => state === 'weak' && red};\n  }\n\n  &:nth-child(1) {\n    background-color: ${({ state }) => state === 'medium' && 'orange'};\n  }\n  &:nth-child(2) {\n    color: orange;\n    background-color: ${({ state }) => state === 'medium' && 'orange'};\n  }\n\n  &:nth-child(3) {\n    color: ${green};\n  }\n`;\n\nexport const Span = styled.span`\n  position: absolute;\n  bottom: 9px;\n  left: 50%;\n  transform: translateX(-50%);\n`;\n","import { List, Item, Span } from './passDifficultyScale.styled';\nimport { useEffect, useState } from 'react';\n\nexport const PassDifficultyScale = ({ password }) => {\n  const [passState, setPassState] = useState('gray');\n\n  // easy\n  const onlyLetters = /^[a-zA-Z]+$/;\n  const onlyDigits = /^[0-9]+$/;\n  const onlySymbols = /^[!@#$%^&*()_+-=;':\"\\\\|,.<>/?]+$/;\n  // medium\n  const onlyLettersWithBig = /^(?=.*[a-z])(?=.*[A-Z])[A-Za-z]+$/;\n  const lettersSymbols = /^(?=.*[a-zA-Z])(?=.*[\\W_]).+$/;\n  const lettersDigits = /^(?=.*[a-zA-Z])(?=.*\\d).+$/;\n  const digitsSymbols = /^(?=.*\\d)(?=.*[\\W_]).+$/;\n  // strong\n  const all = /^(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*])[A-Za-z\\d!@#$%^&*]{6,}$/;\n  const digitsWithBig = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]+$/;\n  const symbolsWithBig = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W_])[A-Za-z\\W_]+$/;\n\n  const onPasswordChange = password => {\n    if (password.length === 0) {\n      setPassState('gray');\n      return;\n    } else if (password.length < 6) {\n      setPassState('red');\n    } else if (\n      all.test(password) ||\n      digitsWithBig.test(password) ||\n      symbolsWithBig.test(password)\n    ) {\n      setPassState('strong');\n    } else if (\n      digitsSymbols.test(password) ||\n      lettersDigits.test(password) ||\n      lettersSymbols.test(password) ||\n      onlyLettersWithBig.test(password)\n    ) {\n      setPassState('medium');\n    } else if (\n      onlyLetters.test(password) ||\n      onlyDigits.test(password) ||\n      onlySymbols.test(password)\n    ) {\n      setPassState('weak');\n    }\n  };\n\n  useEffect(() => {\n    onPasswordChange(password);\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [password]);\n\n  return (\n    <>\n      <List>\n        <Item state={passState}>\n          <Span>{passState === 'weak' && 'weak'}</Span>\n        </Item>\n        <Item state={passState}>\n          <Span>{passState === 'medium' && 'okay'}</Span>\n        </Item>\n        <Item state={passState}>\n          <Span>{passState === 'strong' && 'strong'}</Span>\n        </Item>\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  ErrorMessage as FormikError,\n  Field as FormField,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  margin: 0 auto;\n  padding: 40px 24px;\n  border-radius: ${p => p.theme.radii.small};\n  color: ${p => p.theme.colors.primary_text_switch};\n  background-color: ${p => p.theme.colors.background_switch};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    padding: 40px;\n    width: 600px;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin-top: 0;\n  margin-bottom: 32px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-style: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: 18px;\n  line-height: 1.33;\n  color: ${p => p.theme.colors.primary_text_switch};\n  text-shadow: 0px 47px 355px rgba(0, 0, 0, 0.07),\n    0px 9.4px 57.6875px rgba(0, 0, 0, 0.035);\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    font-size: 24px;\n    text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n      0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n  }\n`;\n\nexport const FormLabel = styled.label`\n  position: relative;\n  display: flex;\n  gap: 8px;\n  flex-direction: column;\n  margin-bottom: 34px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-style: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes.xs};\n  color: ${p => p.theme.colors.primary_text_switch};\n\n  &.is-valid {\n    color: ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    color: ${p => p.theme.colors.redErrorLight};\n  }\n\n  :last-of-type {\n    margin-bottom: 48px;\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    font-size: ${p => p.theme.fontSizes.s};\n    text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n      0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n\n    :last-of-type {\n      margin-bottom: 58px;\n    }\n  }\n`;\n\nexport const Field = styled(FormField)`\n  padding: 14px;\n  font-family: ${p => p.theme.fonts.heading};\n  font-style: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes.s};\n  color: ${p => p.theme.colors.primary_text_switch};\n  border: ${p => p.theme.borders.normal} rgba(220, 227, 229, 0.6);\n  border-radius: 8px;\n  outline: none;\n  background-color: transparent;\n\n  ::placeholder {\n    font-weight: 400;\n  }\n\n  &:hover,\n  &:focus {\n    border-radius: ${p => p.theme.borders.normal};\n    border-color: ${p => p.theme.colors.primary_text_switch};\n  }\n\n  &.is-valid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.greenValid};\n  }\n\n  &.is-invalid {\n    border: ${p => p.theme.borders.normal} ${p => p.theme.colors.redErrorLight};\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    padding: 18px;\n    font-size: ${p => p.theme.fontSizes.m};\n  }\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  position: absolute;\n  top: 78px;\n  left: 16px;\n  color: ${p => p.theme.colors.redErrorLight};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    top: 88px;\n  }\n`;\n\nexport const SuccessMessage = styled.p`\n  position: absolute;\n  top: 78px;\n  left: 16px;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    top: 88px;\n  }\n`;\n\nexport const PasswordIsMatch = styled.p`\n  position: absolute;\n  top: 78px;\n  left: 16px;\n  color: ${p => p.theme.colors.greenValid};\n  font-size: ${p => p.theme.fontSizes.m};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    top: 88px;\n  }\n`;\n\nexport const WrongPassword = styled.p`\n  position: absolute;\n  top: 78px;\n  left: 16px;\n  color: ${p => p.theme.colors.redErrorLight};\n  font-size: ${p => p.theme.fontSizes.m};\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    top: 88px;\n  }\n`;\n\nexport const IconWrap = styled.div`\n  position: absolute;\n  top: 35px;\n  right: 10px;\n  font-size: 20px;\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    top: 41px;\n    font-size: 24px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  gap: 11px;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 46px;\n\n  font-family: ${p => p.theme.fonts.heading};\n  font-style: ${p => p.theme.fonts.heading};\n  font-weight: ${p => p.theme.fontWeights.heading};\n  font-size: ${p => p.theme.fontSizes.s};\n  line-height: 1.33;\n  color: ${p => p.theme.colors.white};\n\n  letter-spacing: -0.02em;\n\n  background: ${p => p.theme.colors.primary};\n  box-shadow: ${p => p.theme.shadows.boxShadow};\n  border: ${p => p.theme.borders.none};\n  border-radius: ${p => p.theme.radii.big};\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    background: ${p => p.theme.colors.secondary};\n  }\n\n  &:disabled {\n    cursor: default;\n    background-color: ${p => p.theme.colors.disabled};\n  }\n\n  @media screen and (min-width: ${p => p.theme.breakpoints.table}) {\n    height: 56px;\n    font-size: 18px;\n  }\n`;\n\nexport const BtnForgotPass = styled.button`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 20px;\n  padding: 20px;\n  font-size: ${props => props.theme.fontSizes.m};\n  font-family: ${props => props.theme.fonts.heading};\n  font-weight: ${props => props.theme.fontWeights.heading};\n  color: ${props => props.theme.colors.primary};\n  text-shadow: 0px 9.399999618530273px 57.6875px 0px rgba(0, 0, 0, 0.04),\n    0px 47px 355px 0px rgba(0, 0, 0, 0.07);\n  text-decoration-line: underline;\n  border: none;\n  outline: none;\n  background-color: transparent;\n\n  cursor: pointer;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Formik, useFormikContext } from 'formik';\nimport {\n  Button,\n  ErrorMessage,\n  Form,\n  Field,\n  FormLabel,\n  FormTitle,\n  IconWrap,\n  SuccessMessage,\n  PasswordIsMatch,\n  WrongPassword,\n} from '../PasswordPage/PasswordPage.styled';\nimport * as Yup from 'yup';\nimport { IoEyeOutline, IoEyeOff } from 'react-icons/io5';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { selectAuthIsLoading } from 'redux/auth/selectors';\nimport { LoaderForBtn } from 'components/LoaderForBtn/LoaderForBtn';\nimport { PassDifficultyScale } from '../../components/passDifficultyScale/passDifficultyScale';\nimport { changePassword } from 'redux/auth/operations';\n\nconst FormValidSchema = Yup.object().shape({\n  oldPassword: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n  newPassword: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n  repeatNewPassword: Yup.string()\n    .min(6, 'Password must be 6 characters long')\n    .required('Required'),\n});\n\nconst PasswordPage = () => {\n  const [password, setPassword] = useState('');\n  const [oldPasswordType, setOldPasswordType] = useState('password');\n  const [newPasswordType, setNewPasswordType] = useState('password');\n  const [newPassword, setNewPassword] = useState('');\n  const [repeatNewPassword, setRepeatNewPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const isLoading = useSelector(selectAuthIsLoading);\n\n  const initialState = {\n    oldPassword: '',\n    newPassword: '',\n    repeatNewPassword: '',\n  };\n\n  const passwordIsMatch =\n    newPassword === repeatNewPassword && newPassword !== '';\n\n  const showOldPassword = () => {\n    if (oldPasswordType === 'password') {\n      setOldPasswordType('text');\n      return;\n    }\n    setOldPasswordType('password');\n  };\n  const showNewPassword = () => {\n    if (newPasswordType === 'password') {\n      setNewPasswordType('text');\n      return;\n    }\n    setNewPasswordType('password');\n  };\n\n  const resetForm = resetFormik => {\n    resetFormik();\n    setNewPassword('');\n    setRepeatNewPassword('');\n  };\n\n  const FormObserver = () => {\n    const { values, errors } = useFormikContext();\n\n    useEffect(() => {\n      setPassword(values.newPassword);\n    }, [errors.newPassword, values]);\n\n    return null;\n  };\n\n  return (\n    <Formik\n      initialValues={initialState}\n      onSubmit={(values, actions) => {\n        dispatch(\n          changePassword({\n            password: values.oldPassword,\n            newPassword: values.newPassword,\n          })\n        );\n        resetForm(actions.resetForm);\n      }}\n      validationSchema={FormValidSchema}\n    >\n      {({ errors, touched, values }) => {\n        const isValid = field =>\n          touched[field] && errors[field]\n            ? 'is-invalid'\n            : touched[field]\n            ? 'is-valid'\n            : '';\n\n        return (\n          <Form>\n            <FormObserver />\n            <FormTitle>{t('Change your password')}</FormTitle>\n\n            <FormLabel className={isValid('oldPassword')}>\n              {t('Old password')}\n              <Field\n                className={isValid('oldPassword')}\n                name=\"oldPassword\"\n                type={oldPasswordType}\n                autoComplete=\"off\"\n                placeholder={t('Enter old password')}\n              />\n              {isValid('oldPassword') === 'is-valid' && (\n                <SuccessMessage>\n                  {t('This is a CORRECT password')}\n                </SuccessMessage>\n              )}\n              <IconWrap onClick={showOldPassword}>\n                {oldPasswordType === 'text' ? <IoEyeOff /> : <IoEyeOutline />}\n              </IconWrap>\n              <ErrorMessage name=\"oldPassword\" component=\"div\" />\n            </FormLabel>\n\n            <FormLabel className={isValid('newPassword')}>\n              {t('New password')}\n              <Field\n                className={isValid('newPassword')}\n                name=\"newPassword\"\n                type={newPasswordType}\n                value={newPassword || values.newPassword}\n                onChange={e => {\n                  setNewPassword(e.target.value);\n                  values.newPassword = e.target.value;\n                }}\n                autoComplete=\"off\"\n                placeholder={t('Enter new password')}\n              />\n              {isValid('newPassword') === 'is-valid' && (\n                <SuccessMessage>\n                  {t('This is a CORRECT password')}\n                </SuccessMessage>\n              )}\n              <IconWrap onClick={showNewPassword}>\n                {newPasswordType === 'text' ? <IoEyeOff /> : <IoEyeOutline />}\n              </IconWrap>\n              <ErrorMessage name=\"newPassword\" component=\"div\" />\n              <PassDifficultyScale password={password} />\n            </FormLabel>\n\n            <FormLabel className={isValid('repeatNewPassword')}>\n              {t('Repeat new password')}\n              <Field\n                className={isValid('repeatNewPassword')}\n                name=\"repeatNewPassword\"\n                type={newPasswordType}\n                value={repeatNewPassword || values.repeatNewPassword}\n                onChange={e => {\n                  setRepeatNewPassword(e.target.value);\n                  values.repeatNewPassword = e.target.value;\n                }}\n                autoComplete=\"off\"\n                placeholder={t('Repeat new password')}\n              />\n              {passwordIsMatch && (\n                <PasswordIsMatch>\n                  {t('New passwords are equivalent')}\n                </PasswordIsMatch>\n              )}\n              {!passwordIsMatch && repeatNewPassword && (\n                <WrongPassword>{t(\"Passwords don't match\")}</WrongPassword>\n              )}\n              <IconWrap onClick={showNewPassword}>\n                {newPasswordType === 'text' ? <IoEyeOff /> : <IoEyeOutline />}\n              </IconWrap>\n            </FormLabel>\n\n            <Button type=\"submit\" disabled={!passwordIsMatch}>\n              {isLoading ? <LoaderForBtn /> : <>{t('Change')}</>}\n            </Button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default PasswordPage;\n"],"names":["SpinBtn","styled","_templateObject","_taggedTemplateLiteral","LoaderForBtn","_jsx","className","children","green","p","theme","colors","greenValid","red","redErrorLight","List","Item","_templateObject2","_ref","state","_ref2","_ref3","_ref4","Span","_templateObject3","PassDifficultyScale","password","_useState","useState","_useState2","_slicedToArray","passState","setPassState","onlyLetters","onlyDigits","onlySymbols","onlyLettersWithBig","lettersSymbols","lettersDigits","digitsSymbols","all","digitsWithBig","symbolsWithBig","useEffect","length","test","onPasswordChange","_Fragment","_jsxs","Form","FormikForm","radii","small","primary_text_switch","background_switch","breakpoints","table","FormTitle","fonts","heading","fontWeights","FormLabel","fontSizes","xs","s","Field","FormField","_templateObject4","borders","normal","m","ErrorMessage","FormikError","_templateObject5","SuccessMessage","_templateObject6","PasswordIsMatch","_templateObject7","WrongPassword","_templateObject8","IconWrap","_templateObject9","Button","_templateObject10","white","primary","shadows","boxShadow","none","big","secondary","disabled","_templateObject11","props","FormValidSchema","Yup","shape","oldPassword","min","required","newPassword","repeatNewPassword","setPassword","_useState3","_useState4","oldPasswordType","setOldPasswordType","_useState5","_useState6","newPasswordType","setNewPasswordType","_useState7","_useState8","setNewPassword","_useState9","_useState10","setRepeatNewPassword","dispatch","useDispatch","t","useTranslation","isLoading","useSelector","selectAuthIsLoading","passwordIsMatch","showOldPassword","showNewPassword","FormObserver","_useFormikContext","useFormikContext","values","errors","Formik","initialValues","onSubmit","actions","changePassword","resetForm","validationSchema","touched","isValid","field","name","type","autoComplete","placeholder","onClick","IoEyeOff","IoEyeOutline","component","value","onChange","e","target"],"sourceRoot":""}